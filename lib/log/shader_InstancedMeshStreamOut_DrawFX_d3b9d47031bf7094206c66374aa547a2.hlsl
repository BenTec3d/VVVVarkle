/**************************
***** Compiler Parameters *****
***************************
@P EffectName: InstancedMeshStreamOut_DrawFX
***************************
******  Resources    ******
***************************
@R    InstanceWorld_id0 => InstanceWorldBuffer.InstanceWorld [Stage: Vertex, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    InstancedMeshStreamOut_DrawFX => caa762a5881e1ae2659b1cbc933b3185
@S    InstanceWorldBuffer => 118f96430a4a97f2d69bc74f02ce134e
***************************
*****     Stages      *****
***************************
@G    Vertex => c6ac3c631f4a5075bbd047a89abd9067
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for InstanceWorld_id0
// {
//
//   struct InstanceTransform
//   {
//       
//       float4x4 Matrix;               // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InstanceWorld_id0                 texture  struct         r/o             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_InstanceID            0   x           0   INSTID    uint   x   
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_structured t0, 64
dcl_input_sgv v0.x, instance_id
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- __input__.InstanceID_id1; 
//   v1.x <- __input__.Position_id3.x; v1.y <- __input__.Position_id3.y; v1.z <- __input__.Position_id3.z; 
//   v2.x <- __input__.Normal_id4.x; v2.y <- __input__.Normal_id4.y; v2.z <- __input__.Normal_id4.z; 
//   v3.x <- __input__.TexCoord_id5.x; v3.y <- __input__.TexCoord_id5.y; 
//   o2.x <- <VSMain return value>.TexCoord_id5.x; o2.y <- <VSMain return value>.TexCoord_id5.y; 
//   o1.x <- <VSMain return value>.Normal_id4.x; o1.y <- <VSMain return value>.Normal_id4.y; o1.z <- <VSMain return value>.Normal_id4.z; 
//   o0.x <- <VSMain return value>.ShadingPosition_id2.x; o0.y <- <VSMain return value>.ShadingPosition_id2.y; o0.z <- <VSMain return value>.ShadingPosition_id2.z; o0.w <- <VSMain return value>.ShadingPosition_id2.w
//
#line 76 "C:\Users\benox\Documents\vvvv\gamma\Exports\VVVVarkle\lib\log\shader_InstancedMeshStreamOut_DrawFX_d3b9d47031bf7094206c66374aa547a2.hlsl"
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyzw, v0.x, l(48), t0.xyzw  // r0.x <- iw._m03; r0.y <- iw._m13; r0.z <- iw._m23; r0.w <- iw._m33

#line 77
mov r1.xyz, v1.xyzx
mov r1.w, l(1.000000)
dp4 o0.w, r1.xyzw, r0.xyzw

#line 76
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyzw, v0.x, l(0), t0.xyzw  // r0.x <- iw._m00; r0.y <- iw._m10; r0.z <- iw._m20; r0.w <- iw._m30

#line 77
dp4 o0.x, r1.xyzw, r0.xyzw

#line 78
dp3 o1.x, v2.xyzx, r0.xyzx

#line 76
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyzw, v0.x, l(16), t0.xyzw  // r0.x <- iw._m01; r0.y <- iw._m11; r0.z <- iw._m21; r0.w <- iw._m31

#line 77
dp4 o0.y, r1.xyzw, r0.xyzw

#line 78
dp3 o1.y, v2.xyzx, r0.xyzx

#line 76
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyzw, v0.x, l(32), t0.xyzw  // r0.x <- iw._m02; r0.y <- iw._m12; r0.z <- iw._m22; r0.w <- iw._m32

#line 77
dp4 o0.z, r1.xyzw, r0.xyzw

#line 78
dp3 o1.z, v2.xyzx, r0.xyzx

#line 84
mov o2.xy, v3.xyxx
ret 
// Approximately 15 instruction slots used
@G    Geometry => cfa30cf367424d257026b49c4ece99da
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_temps 1
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xy
dcl_maxout 3
//
// Initial variable locations:
//   m0 <- triangleStream; 
//   v[0][0].x <- input[0].ShadingPosition_id2.x; v[0][0].y <- input[0].ShadingPosition_id2.y; v[0][0].z <- input[0].ShadingPosition_id2.z; v[0][0].w <- input[0].ShadingPosition_id2.w; 
//   v[0][1].x <- input[0].Normal_id4.x; v[0][1].y <- input[0].Normal_id4.y; v[0][1].z <- input[0].Normal_id4.z; 
//   v[0][2].x <- input[0].TexCoord_id5.x; v[0][2].y <- input[0].TexCoord_id5.y; 
//   v[1][0].x <- input[1].ShadingPosition_id2.x; v[1][0].y <- input[1].ShadingPosition_id2.y; v[1][0].z <- input[1].ShadingPosition_id2.z; v[1][0].w <- input[1].ShadingPosition_id2.w; 
//   v[1][1].x <- input[1].Normal_id4.x; v[1][1].y <- input[1].Normal_id4.y; v[1][1].z <- input[1].Normal_id4.z; 
//   v[1][2].x <- input[1].TexCoord_id5.x; v[1][2].y <- input[1].TexCoord_id5.y; 
//   v[2][0].x <- input[2].ShadingPosition_id2.x; v[2][0].y <- input[2].ShadingPosition_id2.y; v[2][0].z <- input[2].ShadingPosition_id2.z; v[2][0].w <- input[2].ShadingPosition_id2.w; 
//   v[2][1].x <- input[2].Normal_id4.x; v[2][1].y <- input[2].Normal_id4.y; v[2][1].z <- input[2].Normal_id4.z; 
//   v[2][2].x <- input[2].TexCoord_id5.x; v[2][2].y <- input[2].TexCoord_id5.y
//
#line 64 "C:\Users\benox\Documents\vvvv\gamma\Exports\VVVVarkle\lib\log\shader_InstancedMeshStreamOut_DrawFX_d3b9d47031bf7094206c66374aa547a2.hlsl"
mov r0.x, l(0)  // r0.x <- i
loop 
  ige r0.y, r0.x, l(3)
  breakc_nz r0.y

#line 56
  mov o0.xyzw, v[r0.x + 0][0].xyzw
  mov o1.xyz, v[r0.x + 0][1].xyzx
  mov o2.xy, v[r0.x + 0][2].xyxx
  emit_stream m0

#line 67
  iadd r0.x, r0.x, l(1)
endloop 

#line 68
ret 
// Approximately 11 instruction slots used
***************************
*************************/
struct GS_STREAMS 
{
    float4 ShadingPosition_id2;
    float3 Normal_id4;
    float2 TexCoord_id5;
};
struct GS_OUTPUT 
{
    float4 ShadingPosition_id2 : SV_Position;
    float3 Normal_id4 : NORMAL;
    float2 TexCoord_id5 : TEXCOORD;
};
struct GS_INPUT 
{
    float4 ShadingPosition_id2 : SV_Position;
    float3 Normal_id4 : NORMAL;
    float2 TexCoord_id5 : TEXCOORD;
};
struct VS_STREAMS 
{
    uint InstanceID_id1;
    float3 Position_id3;
    float3 Normal_id4;
    float2 TexCoord_id5;
    float4 ShadingPosition_id2;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id2 : SV_Position;
    float3 Normal_id4 : NORMAL;
    float2 TexCoord_id5 : TEXCOORD;
};
struct VS_INPUT 
{
    uint InstanceID_id1 : SV_InstanceID;
    float3 Position_id3 : POSITION;
    float3 Normal_id4 : NORMAL;
    float2 TexCoord_id5 : TEXCOORD;
};
struct InstanceTransform 
{
    float4x4 Matrix;
};
StructuredBuffer<InstanceTransform> InstanceWorld_id0;
void AppendVertex_id0(inout GS_STREAMS streams, GS_INPUT In, inout TriangleStream<GS_OUTPUT> triangleStream)
{
    streams.ShadingPosition_id2 = In.ShadingPosition_id2;
    streams.Normal_id4 = In.Normal_id4;
    streams.TexCoord_id5 = In.TexCoord_id5;

    {
        GS_OUTPUT output = (GS_OUTPUT)0;
        output.ShadingPosition_id2 = streams.ShadingPosition_id2;
        output.Normal_id4 = streams.Normal_id4;
        output.TexCoord_id5 = streams.TexCoord_id5;
        triangleStream.Append(output);
    }
}
[maxvertexcount(3)]
void GSMain(triangle GS_INPUT input[3], inout TriangleStream<GS_OUTPUT> triangleStream)
{
    GS_STREAMS streams = (GS_STREAMS)0;

    for (int i = 0; i < 3; i++)
    {
        AppendVertex_id0(streams, input[i], triangleStream);
    }
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.InstanceID_id1 = __input__.InstanceID_id1;
    streams.Position_id3 = __input__.Position_id3;
    streams.Normal_id4 = __input__.Normal_id4;
    streams.TexCoord_id5 = __input__.TexCoord_id5;
    float4x4 iw = InstanceWorld_id0[streams.InstanceID_id1].Matrix;
    streams.ShadingPosition_id2 = mul(float4(streams.Position_id3.xyz, 1), iw);
    streams.Normal_id4 = mul(float4(streams.Normal_id4.xyz, 0), iw).xyz;
    streams.TexCoord_id5 = streams.TexCoord_id5;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id2 = streams.ShadingPosition_id2;
    __output__.Normal_id4 = streams.Normal_id4;
    __output__.TexCoord_id5 = streams.TexCoord_id5;
    return __output__;
}
