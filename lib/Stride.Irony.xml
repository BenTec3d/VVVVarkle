<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stride.Irony</name>
    </assembly>
    <members>
        <member name="T:Irony.Parsing.Scanner">
            <summary>
            Scanner base class. The Scanner's function is to transform a stream of characters into aggregates/words or lexemes, 
              like identifier, number, literal, etc.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Scanner.#ctor">
            <summary>
              Initializes a new instance of the <see cref = "T:Irony.Parsing.Scanner" /> class.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Scanner.Location">
            <summary>
              Gets or sets the location.
            </summary>
            <value>
              The location.
            </value>
        </member>
        <member name="P:Irony.Parsing.Scanner.Parser">
            <summary>
              Gets the parser.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Scanner.Context">
            <summary>
              Gets the context.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Scanner.Grammar">
            <summary>
              Gets or sets the grammar.
            </summary>
            <value>
              The grammar.
            </value>
        </member>
        <member name="M:Irony.Parsing.Scanner.BeginPreview">
            <summary>
            Begins the preview.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Scanner.EndPreview(System.Boolean)">
            <summary>
            Ends the preview.
            </summary>
            <param name="keepPreviewTokens">
            if set to <c>true</c> [keep preview tokens].
            </param>
        </member>
        <member name="M:Irony.Parsing.Scanner.GetToken">
            <summary>
            Gets the next token.
            </summary>
            <returns>
            A Token
            </returns>
        </member>
        <member name="M:Irony.Parsing.Scanner.Initialize(Irony.Parsing.Parser)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="parser">
            The Parser.
            </param>
        </member>
        <member name="M:Irony.Parsing.Scanner.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Scanner.SetSourceText(System.String,System.String)">
            <summary>
            Sets the source text for this scanner.
            </summary>
            <param name="sourceText">The source text.</param>
        </member>
        <member name="M:Irony.Parsing.Scanner.GetUnfilteredTokens">
            <summary>
            Gets the unfiltered tokens.
            </summary>
            <returns>
            An enumeration on the token
            </returns>
        </member>
        <member name="M:Irony.Parsing.Scanner.NextToken">
            <summary>
            Retrieves the next token.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Scanner.PrepareInput">
            <summary>
            Prepares the input.
            </summary>
        </member>
        <member name="T:Irony.Parsing.ISourceStream">
            <summary>
            Interface for Terminals to access the source stream and produce tokens.
            </summary>
        </member>
        <member name="P:Irony.Parsing.ISourceStream.Text">
            <summary>
            Returns the source text
            </summary>
        </member>
        <member name="P:Irony.Parsing.ISourceStream.Location">
            <summary>
            Current start location (position, row, column) of the new token
            </summary>
        </member>
        <member name="P:Irony.Parsing.ISourceStream.PreviewPosition">
            <summary>
            Gets or sets the current preview position in the source file. Must be greater or equal to Location.Position
            </summary>
        </member>
        <member name="P:Irony.Parsing.ISourceStream.PreviewChar">
            <summary>
            Gets a char at preview position
            </summary>
        </member>
        <member name="P:Irony.Parsing.ISourceStream.NextPreviewChar">
            <summary>
            Gets the char at position next after the PrevewPosition 
            </summary>
        </member>
        <member name="M:Irony.Parsing.ISourceStream.CreateToken(Irony.Parsing.Terminal)">
            <summary>
            Creates a new token based on current preview position.
            </summary>
            <param name="terminal">A terminal associated with the token.</param>
            <returns>New token.</returns>
        </member>
        <member name="M:Irony.Parsing.ISourceStream.CreateToken(Irony.Parsing.Terminal,System.Object)">
            <summary>
            Creates a new token based on current preview position and sets its Value field.
            </summary>
            <param name="terminal">A terminal associated with the token.</param>
            <param name="value">The value associated with the token.</param>
            <returns>New token.</returns>
        </member>
        <member name="M:Irony.Parsing.ISourceStream.CreateErrorToken(System.String,System.Object[])">
            <summary>
            Creates error token with custom error message as its Value.
            </summary>
            <param name="message">Message template, can contain placeholder like {0} to be filled by values from <c>args</c>.</param>
            <param name="args">A list of message arguments</param>
            <returns>An error token.</returns>
        </member>
        <member name="M:Irony.Parsing.ISourceStream.MatchSymbol(System.String,System.Boolean)">
            <summary>
            Tries to match the symbol with the text at current preview position.
            </summary>
            <param name="symbol">A symbol to match</param>
            <param name="ignoreCase">True if char casing should be ignored.</param>
            <returns>True if there is a match; otherwise, false.</returns>
        </member>
        <member name="T:Irony.Parsing.LanguageData">
            <summary>
            Describes a language.
            </summary>
        </member>
        <member name="F:Irony.Parsing.LanguageData.Errors">
            <summary>
            Grammar errors.
            </summary>
        </member>
        <member name="P:Irony.Parsing.LanguageData.Grammar">
            <summary>
            The linked Grammar
            </summary>
        </member>
        <member name="P:Irony.Parsing.LanguageData.GrammarData">
            <summary>
            Raw data extracted from the grammar.
            </summary>
        </member>
        <member name="P:Irony.Parsing.LanguageData.ParserData">
            <summary>
            Data for the parser.
            </summary>
        </member>
        <member name="F:Irony.Parsing.LanguageData.ConstructionTime">
            <summary>
            Time in ms to build a scanner.
            </summary>
        </member>
        <member name="F:Irony.Parsing.LanguageData.ErrorLevel">
            <summary>
            Error level.
            </summary>
        </member>
        <member name="M:Irony.Parsing.LanguageData.#ctor(Irony.Parsing.Grammar)">
            <summary>
            Initializes the specified grammar.
            </summary>
            <param name="grammar">The grammar.</param>
        </member>
        <member name="M:Irony.Parsing.LanguageData.CanParse">
            <summary>
            Determines whether this instance can parse.
            </summary>
            <returns>
              <c>true</c> if this instance can parse; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Irony.Parsing.LanguageData.ConstructAll">
            <summary>
            Constructs all.
            </summary>
        </member>
        <member name="T:Irony.Parsing.Parser">
            <summary>
            </summary>
        </member>
        <member name="F:Irony.Parsing.Parser.CoreParser">
            <summary>
            </summary>
        </member>
        <member name="F:Irony.Parsing.Parser.Language">
            <summary>
            </summary>
        </member>
        <member name="F:Irony.Parsing.Parser.Root">
            <summary>
            </summary>
        </member>
        <member name="F:Irony.Parsing.Parser.Scanner">
            <summary>
            </summary>
        </member>
        <member name="M:Irony.Parsing.Parser.#ctor(Irony.Parsing.Grammar)">
            <summary>
            </summary>
            <param name="grammar">
            </param>
        </member>
        <member name="M:Irony.Parsing.Parser.#ctor(Irony.Parsing.LanguageData)">
            <summary>
            </summary>
            <param name="language">
            </param>
        </member>
        <member name="M:Irony.Parsing.Parser.#ctor(Irony.Parsing.LanguageData,Irony.Parsing.Scanner,Irony.Parsing.NonTerminal)">
            <summary>
            Initializes a new instance of the <see cref="T:Irony.Parsing.Parser"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="scanner">The scanner.</param>
            <param name="root">The root.</param>
            <exception cref="T:System.Exception">
              </exception>
        </member>
        <member name="P:Irony.Parsing.Parser.Context">
            <summary>
            </summary>
        </member>
        <member name="M:Irony.Parsing.Parser.Parse(System.String)">
            <summary>
            </summary>
            <param name="sourceText">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Irony.Parsing.Parser.Parse(System.String,System.String)">
            <summary>
            </summary>
            <param name="sourceText">
            </param>
            <param name="fileName">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Irony.Parsing.Parser.ScanOnly(System.String,System.String)">
            <summary>
            </summary>
            <param name="sourceText">
            </param>
            <param name="fileName">
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:Irony.Parsing.ConflictResolutionArgs">
            <summary>
            The class provides arguments for custom conflict resolution grammar method.
            </summary>
        </member>
        <member name="F:Irony.Parsing.HintType.ResolveToShift">
            <summary>
            Instruction to resolve conflict to shift
            </summary>
        </member>
        <member name="F:Irony.Parsing.HintType.ResolveToReduce">
            <summary>
            Instruction to resolve conflict to reduce
            </summary>
        </member>
        <member name="F:Irony.Parsing.HintType.ResolveInCode">
            <summary>
            Instruction to resolve the conflict using special code in grammar in OnResolvingConflict method.
            </summary>
        </member>
        <member name="F:Irony.Parsing.HintType.Precedence">
            <summary>
            Currently ignored by Parser, may be used in the future to set specific precedence value of the following terminal operator.
            One example where it can be used is setting higher precedence value for unary + or - operators. This hint would override 
            precedence set for these operators for cases when they are used as unary operators. (YACC has this feature).
            </summary>
        </member>
        <member name="F:Irony.Parsing.HintType.Custom">
            <summary>
            Provided for all custom hints that derived solutions may introduce 
            </summary>
        </member>
        <member name="T:Irony.Parsing.TokenFlags">
            <summary>
            Token flags.
            </summary>
        </member>
        <member name="T:Irony.Parsing.TokenCategory">
            <summary>
            Token category.
            </summary>
        </member>
        <member name="F:Irony.Parsing.TokenCategory.Content">
            <summary>
            Content category.
            </summary>
        </member>
        <member name="F:Irony.Parsing.TokenCategory.Outline">
            <summary>
            newLine, indent, dedent
            </summary>
        </member>
        <member name="F:Irony.Parsing.TokenCategory.Comment">
            <summary>
            Comment category.
            </summary>
        </member>
        <member name="F:Irony.Parsing.TokenCategory.Directive">
            <summary>
            Directive category.
            </summary>
        </member>
        <member name="F:Irony.Parsing.TokenCategory.Error">
            <summary>
            Error category.
            </summary>
        </member>
        <member name="T:Irony.Parsing.TokenList">
            <summary>
            A List of tokens.
            </summary>
        </member>
        <member name="T:Irony.Parsing.TokenStack">
            <summary>
            A Stack of tokens.
            </summary>
        </member>
        <member name="T:Irony.Parsing.Token">
            <summary>
            Tokens are produced by scanner and fed to parser, optionally passing through Token filters in between. 
            </summary>
        </member>
        <member name="M:Irony.Parsing.Token.#ctor(Irony.Parsing.Terminal,Irony.Parsing.SourceLocation,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Irony.Parsing.Token"/> class.
            </summary>
            <param name="term">The term.</param>
            <param name="location">The location.</param>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Irony.Parsing.Token.#ctor(Irony.Parsing.Terminal,Irony.Parsing.SourceLocation,System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Irony.Parsing.Token"/> class.
            </summary>
            <param name="term">The term.</param>
            <param name="location">The location.</param>
            <param name="length">The length.</param>
            <param name="source">The source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Irony.Parsing.Token.Location">
            <summary>
            Location in the source code.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.Terminal">
            <summary>
            Gets the terminal.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.KeyTerm">
            <summary>
            Gets the Key terminal if any.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.SourceCode">
            <summary>
            Gets the source code.
            </summary>
            <value>
            The source code.
            </value>
        </member>
        <member name="P:Irony.Parsing.Token.Text">
            <summary>
            Gets the text associated with this token.
            </summary>
        </member>
        <member name="F:Irony.Parsing.Token.Value">
            <summary>
            Get the Value associated with this token.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.ValueString">
            <summary>
            Gets the value as a string.
            </summary>
        </member>
        <member name="F:Irony.Parsing.Token.Flags">
            <summary>
            Get the flags
            </summary>
        </member>
        <member name="F:Irony.Parsing.Token.EditorInfo">
            <summary>
            Gets the Editor info.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:Irony.Parsing.Token.OtherBrace">
            <summary>
            Gets the matching opening/closing brace
            </summary>
        </member>
        <member name="F:Irony.Parsing.Token.ScannerState">
            <summary>
            Scanner state after producing token 
            </summary>
        </member>
        <member name="M:Irony.Parsing.Token.SetTerminal(Irony.Parsing.Terminal)">
            <summary>
            Sets the terminal.
            </summary>
            <param name="terminal">The terminal.</param>
        </member>
        <member name="M:Irony.Parsing.Token.IsSet(Irony.Parsing.TokenFlags)">
            <summary>
            Determines whether the specified flag is set.
            </summary>
            <param name="flag">The flag.</param>
            <returns>
              <c>true</c> if the specified flag is set; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Irony.Parsing.Token.IsError">
            <summary>
            Determines whether this instance is error.
            </summary>
            <returns>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Irony.Parsing.Token.LinkMatchingBraces(Irony.Parsing.Token,Irony.Parsing.Token)">
            <summary>
            Links the matching braces.
            </summary>
            <param name="openingBrace">The opening brace.</param>
            <param name="closingBrace">The closing brace.</param>
        </member>
        <member name="M:Irony.Parsing.Token.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Irony.Parsing.MultiToken">
            <summary>
            Some terminals may need to return a bunch of tokens in one call to TryMatch; MultiToken is a container for these tokens
            </summary>
        </member>
        <member name="F:Irony.Parsing.MultiToken.ChildTokens">
            <summary>
            List of child tokens
            </summary>
        </member>
        <member name="M:Irony.Parsing.MultiToken.#ctor(Irony.Parsing.Terminal,Irony.Parsing.SourceLocation,Irony.Parsing.TokenList)">
            <summary>
            Initializes a new instance of the <see cref="T:Irony.Parsing.MultiToken"/> class.
            </summary>
            <param name="term">The term.</param>
            <param name="location">The location.</param>
            <param name="childTokens">The child tokens.</param>
        </member>
        <member name="F:Irony.Parsing.Grammar.CaseSensitive">
            <summary>
            Gets case sensitivity of the grammar. Read-only, true by default. 
            Can be set to false only through a parameter to grammar constructor.
            </summary>
        </member>
        <member name="F:Irony.Parsing.Grammar.Root">
            <summary>
            The main root entry for the grammar. 
            </summary>
        </member>
        <member name="F:Irony.Parsing.Grammar.SnippetRoots">
            <summary>
            Alternative roots for parsing code snippets.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Grammar.OnScannerSelectTerminal(Irony.Parsing.ParsingContext)">
            <summary>
            Override this method to help scanner select a terminal to create token when there are more than one candidates
            for an input char. Context.CurrentTerminals contains candidate terminals; leave a single terminal in this list
            as the one to use.
            </summary>
        </member>
        <member name="M:Irony.Parsing.Grammar.OnResolvingConflict(Irony.Parsing.ConflictResolutionArgs)">
            <summary>
            Override this method to provide custom conflict resolution; for example, custom code may decide proper shift or reduce
            action based on preview of tokens ahead. 
            </summary>
        </member>
        <member name="M:Irony.Parsing.Grammar.AddTermsReportGroup(System.String,System.String[])">
            <summary>
            Creates a terminal reporting group, so all terminals in the group will be reported as a single "alias" in syntex error messages like
            "Syntax error, expected: [list of terms]"
            </summary>
            <param name="alias">An alias for all terminals in the group.</param>
            <param name="symbols">Symbols to be included into the group.</param>
        </member>
        <member name="M:Irony.Parsing.Grammar.AddTermsReportGroup(System.String,Irony.Parsing.Terminal[])">
            <summary>
            Creates a terminal reporting group, so all terminals in the group will be reported as a single "alias" in syntex error messages like
            "Syntax error, expected: [list of terms]"
            </summary>
            <param name="alias">An alias for all terminals in the group.</param>
            <param name="terminals">Terminals to be included into the group.</param>
        </member>
        <member name="M:Irony.Parsing.Grammar.AddToNoReportGroup(System.String[])">
            <summary>
            Adds symbols to a group with no-report type, so symbols will not be shown in expected lists in syntax error messages. 
            </summary>
            <param name="symbols">Symbols to exclude.</param>
        </member>
        <member name="M:Irony.Parsing.Grammar.AddToNoReportGroup(Irony.Parsing.Terminal[])">
            <summary>
            Adds symbols to a group with no-report type, so symbols will not be shown in expected lists in syntax error messages. 
            </summary>
            <param name="symbols">Symbols to exclude.</param>
        </member>
        <member name="M:Irony.Parsing.Grammar.AddOperatorReportGroup(System.String)">
            <summary>
            Adds a group and an alias for all operator symbols used in the grammar.
            </summary>
            <param name="alias">An alias for operator symbols.</param>
        </member>
        <member name="T:Irony.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Irony.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Irony.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Irony.Resources.ConsoleNoChars">
            <summary>
              Looks up a localized string similar to Nn.
            </summary>
        </member>
        <member name="P:Irony.Resources.ConsoleYesChars">
            <summary>
              Looks up a localized string similar to Yy.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrAmbigGrammarRR">
            <summary>
              Looks up a localized string similar to Ambiguous grammar, unresolvable reduce-reduce conflicts. State {0}, lookaheads [{1}].
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrAmbigGrammarSR">
            <summary>
              Looks up a localized string similar to Ambiguous grammar, unresolvable shift-reduce conflicts. State {0}, lookaheads [{1}].
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrArgListNotFound">
            <summary>
              Looks up a localized string similar to Argument list not found in the stack. Expected: ValueList, found: {0}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrAssignLiteralValue">
            <summary>
              Looks up a localized string similar to Invalide operation, attempt to assign constant or literal value..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrBadChar">
            <summary>
              Looks up a localized string similar to Invalid length of char literal - should be a single character..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrBadStrLiteral">
            <summary>
              Looks up a localized string similar to Mal-formed  string literal - cannot find termination symbol..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrBadUnEscape">
            <summary>
              Looks up a localized string similar to Invalid unicode escape ({0}), expected {1} hex digits..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrBadXEscape">
            <summary>
              Looks up a localized string similar to Invalid \x escape, at least one digit expected..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrCannotConvertValue">
            <summary>
              Looks up a localized string similar to Cannot convert value from type {0} to type {1}, type converter not defined..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrCannotConvertValueToType">
            <summary>
              Looks up a localized string similar to Cannot convert literal {0} to type {1}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrConflictMsgTemplate">
            <summary>
              Looks up a localized string similar to {0} State {1} on inputs: {2}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrConsoleFatalError">
            <summary>
              Looks up a localized string similar to Fatal error:.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrConstructNotSupported">
            <summary>
              Looks up a localized string similar to Construct &apos;{0}&apos; is not supported (yet) by language implementation..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrDsvNoClosingQuote">
            <summary>
              Looks up a localized string similar to Could not find a closing quote for quoted value..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrDupRegexSwitch">
            <summary>
              Looks up a localized string similar to Duplicate switch &apos;{0}&apos; for regular expression..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrDupStartSymbolStr">
            <summary>
              Looks up a localized string similar to Duplicate start symbol {0} in string literal [{1}]..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrFailedCreateNode">
            <summary>
              Looks up a localized string similar to Failed to create AST node for non-terminal [{0}], error: {1}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrImpliedOpUseParserLink">
            <summary>
              Looks up a localized string similar to ImpliedSymbolTerminal cannot be used in grammar with DisableScannerParserLink flag set.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInternalErrDataPopFailed">
            <summary>
              Looks up a localized string similar to Interpreter error, DataStack.Pop() operation failed - stack is empty..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInterpreterIsBusy">
            <summary>
              Looks up a localized string similar to Interpreter is busy..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvalidArgsForIncDec">
            <summary>
              Looks up a localized string similar to Invalid arguments for IncDecNode AST node: either first or second argument should be &apos;--&apos; or &apos;++&apos;..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvalidAstMode">
            <summary>
              Looks up a localized string similar to Invalid AstMode value in call to Evaluate method. Node: {0}, mode: {1}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvalidChar">
            <summary>
              Looks up a localized string similar to Invalid character: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvalidEmbeddedPrefix">
            <summary>
              Looks up a localized string similar to Invalid embedded expression. .
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvDedent">
            <summary>
              Looks up a localized string similar to Invalid dedent level, no previous matching indent found..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvEscape">
            <summary>
              Looks up a localized string similar to Invalid escape sequence: \{0}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvEscSeq">
            <summary>
              Looks up a localized string similar to Invalid escape sequence..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvEscSymbol">
            <summary>
              Looks up a localized string similar to Invalid escape symbol, expected &apos;u&apos; or &apos;U&apos; only..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvNumber">
            <summary>
              Looks up a localized string similar to Invalid number..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvRegexSwitch">
            <summary>
              Looks up a localized string similar to Invalid switch &apos;{0}&apos; for regular expression.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrInvStrDef">
            <summary>
              Looks up a localized string similar to Error in string literal [{0}]: No start/end symbols specified..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrLastTermOfErrorProd">
            <summary>
              Looks up a localized string similar to The last term of production containing SyntaxError must be a terminal. NonTerminal: {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrListCannotBeTransient">
            <summary>
              Looks up a localized string similar to List non-terminals cannot be marked transient; list: ({0}).
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNewLineExpected">
            <summary>
              Looks up a localized string similar to NewLine expected..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNLALRhang">
            <summary>
              Looks up a localized string similar to NLALR process is in indefinite loop, number of states exceeded 3000..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoClosingBrace">
            <summary>
              Looks up a localized string similar to No closing pair for opening symbol {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNodeTypeNotSetOn">
            <summary>
              Looks up a localized string similar to Warning: AstNodeType or AstNodeCreator is not set on non-terminals: {0}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoEndForRegex">
            <summary>
              Looks up a localized string similar to No end symbol for regex literal..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoEndTagInEmbExpr">
            <summary>
              Looks up a localized string similar to No ending tag &apos;{0}&apos; found in embedded expression..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoImplForUnaryOp">
            <summary>
              Looks up a localized string similar to UnExprNode: no implementation for unary operator &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoLetterAfterNum">
            <summary>
              Looks up a localized string similar to Number cannot be followed by a letter..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNoLkhds">
            <summary>
              Looks up a localized string similar to ParserDataBuilder error: inadequate state {0}, reduce item &apos;{1}&apos; has no lookaheads..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNtRuleIsNull">
            <summary>
              Looks up a localized string similar to Non-terminal {0} has uninitialized Rule property..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrNullNodeEval">
            <summary>
              Looks up a localized string similar to Attempt to evaluate NULL AST node. The AST node for term &apos;{0}&apos; was not created during parsing..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrOpNotDefinedForTypes">
            <summary>
              Looks up a localized string similar to Operator &apos;{0}&apos; is not defined for types {1} and {2}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrOpNotImplemented">
            <summary>
              Looks up a localized string similar to Operator &apos;{0} not imlemented..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrOutErrorPrintFormat">
            <summary>
              Looks up a localized string similar to {0}: {1}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrOutlineFilterContSymbol">
            <summary>
              Looks up a localized string similar to CodeOutlineFilter: line continuation symbol &apos;{0}&apos; should be added to Grammar.NonGrammarTerminals list..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrParserUnexpInput">
            <summary>
              Looks up a localized string similar to Syntax error, expected: {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrParseTreeNull">
            <summary>
              Looks up a localized string similar to Parsed tree is null, cannot evaluate..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrParseTreeRootNull">
            <summary>
              Looks up a localized string similar to Parse tree root is null, cannot evaluate..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRootAstNodeNull">
            <summary>
              Looks up a localized string similar to Root AST node is null, cannot evaluate..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRootAstNoInterface">
            <summary>
              Looks up a localized string similar to Root AST node does not implement IInterpretedAstNode interface, cannot evaluate..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRootNotRegistered">
            <summary>
              Looks up a localized string similar to ({0}) term passed as &apos;root&apos; paramater to parserr is not Root or snippet root of the grammar. Add it to SnippetRoots set in grammar constructor..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRootNotSet">
            <summary>
              Looks up a localized string similar to Root property of the grammar is not set..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRRConflict">
            <summary>
              Looks up a localized string similar to Reduce-reduce conflict. State {0}, lookaheads: {1}. Selected reduce on first production in conflict set..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrRuleContainsNull">
            <summary>
              Looks up a localized string similar to Rule for NonTerminal {0} contains null as an operand in position {1} in one of productions..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrSRConflict">
            <summary>
              Looks up a localized string similar to Shift-reduce conflict. State {0}, lookaheads [{1}]. Selected shift as preferred action..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrSyntaxErrorNoInfo">
            <summary>
              Looks up a localized string similar to Syntax error..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrTemplExprNotRoot">
            <summary>
              Looks up a localized string similar to Expression root non-terminal in template settings (AstNodeConfig property) in templated string literal [{0}] is not added to Roots set. Add it to SnippetRoots in grammar constructor..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrTemplMissingExprRoot">
            <summary>
              Looks up a localized string similar to Expression root is not specified in template settings (AstNodeConfig property) in templated string literal [{0}]. .
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrTemplNoSettings">
            <summary>
              Looks up a localized string similar to Error in string literal [{0}]: IsTemplate flag is set, but TemplateSettings is not provided in AstNodeConfig property..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrTerminalHasEmptyPrefix">
            <summary>
              Looks up a localized string similar to A terminal {0} has empty prefix..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrTransientNtMustHaveOneTerm">
            <summary>
              Looks up a localized string similar to Transient non-terminal must have zero or one non-punctuation child nodes; non-terminals: {0}..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrUnclosedComment">
            <summary>
              Looks up a localized string similar to Unclosed comment block.
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrUnexpEof">
            <summary>
              Looks up a localized string similar to Unexpected end of file..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrUnexpIndent">
            <summary>
              Looks up a localized string similar to Unexpected indentation..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrUnmatchedCloseBrace">
            <summary>
              Looks up a localized string similar to Unmatched closing brace &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrVarIsNotCallable">
            <summary>
              Looks up a localized string similar to Variable {0} is not a callable function..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrVarNotDefined">
            <summary>
              Looks up a localized string similar to Variable {0} not defined..
            </summary>
        </member>
        <member name="P:Irony.Resources.ErrWrongArgCount">
            <summary>
              Looks up a localized string similar to Invalid number of arguments. Expected {0}, found {1}..
            </summary>
        </member>
        <member name="P:Irony.Resources.FmtRowCol">
            <summary>
              Looks up a localized string similar to {0}({1}:{2}).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelActionAccept">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelActionOp">
            <summary>
              Looks up a localized string similar to Operator, shift to {0}/reduce on {1}..
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelActionReduce">
            <summary>
              Looks up a localized string similar to Reduce on {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelActionShift">
            <summary>
              Looks up a localized string similar to Shift to {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelActionUnknown">
            <summary>
              Looks up a localized string similar to (Unknown action type).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelEofMark">
            <summary>
              Looks up a localized string similar to (EOF).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelEosLabel">
            <summary>
              Looks up a localized string similar to [end-of-statement].
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelInitialState">
            <summary>
              Looks up a localized string similar to (INITIAL STATE).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelKeySymbol">
            <summary>
              Looks up a localized string similar to (Key symbol).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelKeyword">
            <summary>
              Looks up a localized string similar to (Keyword).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelLineBreak">
            <summary>
              Looks up a localized string similar to [line break].
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelLocation">
            <summary>
              Looks up a localized string similar to Location:.
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelSrcHaveMore">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelUnassigned">
            <summary>
              Looks up a localized string similar to (unassigned).
            </summary>
        </member>
        <member name="P:Irony.Resources.LabelUnnamed">
            <summary>
              Looks up a localized string similar to (unnamed).
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgAbortScriptYN">
            <summary>
              Looks up a localized string similar to Abort script(y/n)?.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgDefaultConsoleGreeting">
            <summary>
              Looks up a localized string similar to {0} Console.\r\nPress Ctrl-C to exit the program.\r\n.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgDefaultConsoleTitle">
            <summary>
              Looks up a localized string similar to Console.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgExitConsoleYN">
            <summary>
              Looks up a localized string similar to Exit console (y/n)?.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgNLALRAdvice">
            <summary>
              Looks up a localized string similar to NLALR transform: Add WrapTail() in &apos;.&apos; position to [{0}]..
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgPressAnyKeyToExit">
            <summary>
              Looks up a localized string similar to Press any key to end the program..
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgSrcPosToString">
            <summary>
              Looks up a localized string similar to &quot;[{0}], at {1}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceConflictResolved">
            <summary>
              Looks up a localized string similar to Parsing conflict resolved in code..
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceOpResolved">
            <summary>
              Looks up a localized string similar to Operator - resolved to {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTracePoppedState">
            <summary>
              Looks up a localized string similar to Popped state from stack, pushing {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverAction">
            <summary>
              Looks up a localized string similar to RECOVERING: {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverFailed">
            <summary>
              Looks up a localized string similar to FAILED TO RECOVER.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverFoundState">
            <summary>
              Looks up a localized string similar to RECOVERING: Found state with shift on error : {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecovering">
            <summary>
              Looks up a localized string similar to RECOVERING: popping stack, looking for state with error shift.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverReducing">
            <summary>
              Looks up a localized string similar to RECOVERING: Reached end of error production, reducing..
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverShiftError">
            <summary>
              Looks up a localized string similar to RECOVERING: Shifting Error term, {0}.
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverShiftTillEnd">
            <summary>
              Looks up a localized string similar to RECOVERING: shifting until the end of error production..
            </summary>
        </member>
        <member name="P:Irony.Resources.MsgTraceRecoverSuccess">
            <summary>
              Looks up a localized string similar to RECOVERED.
            </summary>
        </member>
    </members>
</doc>
